#!/bin/bash
say() {
	echo -e "\033[1m$*\033[m"
}

say2() {
    echo -e "$*"
}

for P in "$@"; do
	if [ -d $P ]; then
                WD=`pwd`
		cd $P
                g="$(git rev-parse --git-dir > /dev/null 2>&1 ; echo $?)"
                if [ $g -eq 0 ]; then
		    # refresh index info
		    git update-index --refresh > /dev/null 2>&1
		    queued="$(git diff-index --name-status --cached --quiet HEAD; echo $?)"
		    changed="$(git diff-files --name-status --quiet; echo $?)"
		    uncommitted="$(git ls-files -m -o -d --exclude-standard)"
		    if [ $queued -ne 0 ]; then
			say2 "$P: has changes queued"
		    elif [ $changed -ne 0 ]; then
			say2 "$P: has unqueued changes"
		    else
			if [ -n "$uncommitted" ]; then
			    say "$P *"
			else
			    say "$P"
			fi
			git pull --rebase
		    fi
                fi
		cd $WD
	fi
done

